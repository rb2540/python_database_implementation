R := inputfromfile(sales1) // import vertical bar delimited foo, first line
// has column headers.
// Suppose they are saleid|itemid|customerid|storeid|time|qty|pricerange
// In general there can be more or fewer columns than this.
R1 := select(R, (time > 50) or (qty < 30))
// select * from R where time > 50 or qty < 30
R2 := project(R1, saleid, qty, pricerange) // select saleid, qty, pricerange
// from R1
R3 := avg(R1, qty) // select avg(qty) from R1
R4 := sumgroup(R1, time, qty) // select sum(time), qty from R1 group by qty
R5 := sumgroup(R1, qty, time, pricerange) // select sum(qty), time,
// pricerange from R1 group by time, pricerange
R6 := avggroup(R1, qty, pricerange) // select avg(qty), pricerange
// from R1 group by by pricerange
S := inputfromfile(sales2) // suppose column headers are
// saleid|I|C|S|T|Q|P
Q1 := select(R, qty = 5) // select * from R where qty=5
Btree(R, qty) // create an index on R based on column qty
// Equality selections and joins on R should use the index.
// All indexes will be on one column (both Btree and Hash)
Q2 := select(R, qty = 5) // this should use the index
Q3 := select(R, itemid = 7) // select * from R where itemid = 7
Hash(R,itemid)
Q4 := select(R, itemid = 7) // this should use the hash index
Q5 := concat(Q4, Q2) // concatenate the two tables (must have the same schema)
// Duplicate rows may result (though not with this example).
outputtofile(Q5, Q5) // This should output the table Q5 into a file
// with the same name and with vertical bar separators
outputtofile(R1, R1)
outputtofile(R2, R2)
outputtofile(R3, R3)
outputtofile(R4, R4)
outputtofile(R5, R5)
outputtofile(R6, R6)
outputtofile(Q1, Q1)
outputtofile(Q2, Q2)
outputtofile(Q3, Q3)
outputtofile(Q4, Q4)
outputtofile(Q5, Q5)
